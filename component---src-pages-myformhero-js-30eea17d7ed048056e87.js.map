{"version":3,"sources":["webpack:///./src/pages/myformhero.js"],"names":["MyFormHero","props","submitForm","bind","state","status","render","this","className","onSubmit","action","method","htmlFor","type","name","id","required","data-error","placeholder","value","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React","Component"],"mappings":"wKAGqBA,E,oBACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,WAAa,EAAKA,WAAWC,K,yHAAhB,KAClB,EAAKC,MAAQ,CACXC,OAAQ,IAJO,E,kHAQnBC,OAAA,WAAU,IACAD,EAAWE,KAAKH,MAAhBC,OACR,OACI,yBAAKG,UAAU,gBACX,0BACAC,SAAUF,KAAKL,WACfQ,OAAO,gCACPC,OAAO,QAEH,2BAAOC,QAAQ,mBAAf,sBACA,2BAAOC,KAAK,OAAOL,UAAU,kBAAkBM,KAAK,oBAAoBC,GAAG,WAAWC,UAAQ,EAACC,aAAW,oBAAoBC,YAAY,eAC1I,2BAAON,QAAQ,aAAf,SACA,2BAAOC,KAAK,QAAQL,UAAU,kBAAkBM,KAAK,mBAAmBC,GAAG,YAAYC,UAAQ,EAACC,aAAW,oBAAoBC,YAAY,mBAC3I,yBAAKV,UAAU,gBACC,YAAXH,EAAuB,2BAAOG,UAAU,SAASK,KAAK,SAASE,GAAG,eAAeD,KAAK,SAASK,MAAM,4CAA+C,2BAAOX,UAAU,SAASK,KAAK,SAASE,GAAG,eAAeD,KAAK,SAASK,MAAM,iBACvN,UAAXd,GAAsB,2BAAOG,UAAU,SAASK,KAAK,SAASE,GAAG,eAAeD,KAAK,SAASK,MAAM,mC,EAQvHjB,WAAA,SAAWkB,GAAK,IAAD,OACbA,EAAGC,iBACH,IAAMC,EAAOF,EAAGG,OACVC,EAAO,IAAIC,SAASH,GACpBI,EAAM,IAAIC,eAChBD,EAAIE,KAAKN,EAAKX,OAAQW,EAAKZ,QAC3BgB,EAAIG,iBAAiB,SAAU,oBAC/BH,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeJ,eAAeK,OACnB,MAAfN,EAAIrB,QACNiB,EAAKW,QACL,EAAKC,SAAS,CAAE7B,OAAQ,aAExB,EAAK6B,SAAS,CAAE7B,OAAQ,YAG5BqB,EAAIS,KAAKX,I,GAhD2BY,IAAMC","file":"component---src-pages-myformhero-js-30eea17d7ed048056e87.js","sourcesContent":["\nimport React from \"react\";\n\nexport default class MyFormHero extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n        <div className=\"card-section\">\n            <form\n            onSubmit={this.submitForm}\n            action=\"https://formspree.io/mnbbobvm\"\n            method=\"POST\"\n            >\n                <label htmlFor=\"TestMySite_Name\">Website or App url</label>\n                <input type=\"text\" className=\"login-box-input\" name=\"TestMySite_Domain\" id=\"userName\" required data-error=\"NEW ERROR MESSAGE\" placeholder=\"domain.com\"/>\n                <label htmlFor=\"userEmail\">Email</label>\n                <input type=\"email\" className=\"login-box-input\" name=\"TestMySite_Email\" id=\"userEmail\" required data-error=\"NEW ERROR MESSAGE\" placeholder=\"name@email.com\"/>\n                <div className=\"padding5_top\">\n                    {status === \"SUCCESS\" ? <input className=\"button\" type=\"submit\" id=\"send_message\" name=\"submit\" value=\"Form Successfully Submitted. Thank you!\" /> : <input className=\"button\" type=\"submit\" id=\"send_message\" name=\"submit\" value=\"Test my site\" />}\n                    {status === \"ERROR\" && <input className=\"button\" type=\"submit\" id=\"send_message\" name=\"submit\" value=\"Ooops! There was an error.\" />}\n                 \n                </div>\n            </form>\n        </div>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}"],"sourceRoot":""}